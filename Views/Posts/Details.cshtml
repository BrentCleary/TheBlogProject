@using TheBlogProject.Enums
@using TheBlogProject.Models
@using TheBlogProject.Services
@using TheBlogProject.ViewModels
@using Microsoft.AspNetCore.Identity


@inject IImageService imageService
@inject UserManager<BlogUser> userManager
@model PostDetailViewModel

<div class="container">
    <div class="row">
        <article>  
            <div class="row">
                <div class="col-9 border-right">
                    @Html.Raw(Model.Post.Content)
                </div>
                <div class="col-3 text-center font-weight-bold h6" >
                    <div class="card">
                        <div class="d-flex justify-content-center p-5">
                            <img class="card-img-top img-fluid d-flex justify-content-center" src="/images/blog_tag.png" alt="Tags...">
                        </div>
                        <div class="card-body">
                            <h4 class="card-title">SYSTEM TAGS</h4>
                            <div class="tagView">
                                @foreach (var tag in Model.Tags)
                                {
                                    <a asp-action="TagIndex" asp-route-tag="@tag" class="mb-1 btn btn-sm btn-warning btn-outline-dark">#@tag</a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
  
        </article>

        <article>
            <hr />
            <h3 class="text-center font-weight-bold">Tags</h3>
            <div class="col text-center">
                @foreach (var tag in Model.Post.Tags.ToList())
                {
                    <a asp-action="TagIndex" asp-route-tag="@tag.Text.ToLower()" class="mb-1 btn btn-sm btn-warning btn-outline-dark">#@tag.Text</a>
                }
            </div>
            <hr />
        </article>


        <div>
            @if (User.Identity.IsAuthenticated)
            {
            <form asp-action="Create" asp-controller="Comments" method="post">
                @Html.Hidden("PostId", Model.Post.Id)
                @Html.Hidden("Slug", Model.Post.Slug)

                <div class="form-group">
                    <label class="h2 control-label font-weight-bold">Add Comment</label>
                    <textarea name="body" class="form-control" rows="10"></textarea>
                </div>

                <button type="submit" class="btn btn-dark btn-block btn-sm">Submit</button>
            </form>
            }
            else
            {
                <a class="btn btn-block btn-sm btn-dark" asp-area="Identity" asp-page="/Account/Login">
                    Login to add comments
                </a>
            }

            <br />
            <hr class="card-hr" />
            <br />

            <a id="commentSection" class="btn btn-sm btn-dark btn-block mb-2">@Model.Post.Comments.Count COMMENT(S)</a>

            @foreach (var comment in Model.Post.Comments.OrderByDescending(c => c.Created))
            {
                <div class="media p-3 mb-2 bg-cf media-border">
                    <img src="@imageService.DecodeImage(comment.BlogUser.ImageData, comment.BlogUser.ContentType)" alt="@comment.BlogUser.DisplayName" class="mr-3 mt-3 rounded-pill img-thumbnail " style="width:60px;">
            
                    <div class="media-body">
                        <h4>@comment.BlogUser.DisplayName</h4>
             
                        @****************************************************************
                        SECTION 1: POST ON OR UPDATED ON               
                        *****************************************************************@
                        @if(comment.Deleted is not null)
                        {
                            <span class="small">                                                       
                                <span class="font-weight-bolder">Deleted</span> : @comment.Deleted?.ToString("MMM dd, yyyy")
                            </span>                    
                        }
                        else if(comment.Moderated is not null)
                        {
                            <span class="small">
                                <span class="font-weight-bolder">
                                    Moderated <span class="text-danger font-italic">(@comment.ModerationType.ToString().ToLower())</span>                   
                                </span>                       
                                : @comment.Moderated?.ToString("MMM dd, yyyy")                                                           
                            </span>                   
                         }
                        else if(comment.Updated is not null)
                        {
                            <span class="small">
                                <span class="font-weight-bolder">Updated </span> : @comment.Updated?.ToString()
                            </span>        
                        }
                        else
                        {
                            <span class="small">
                                <span class="font-weight-bolder">Created </span> : @comment.Created.ToString()
                            </span>                      
                        }                                             

                        @*****************************************************************
                        SECTION 2: HOW DO WE COMPOSE THE BODY                       
                        *****************************************************************@     
                        @*****************************************************************
                        SECTION 2A: Render pre text                       
                        *****************************************************************@                     
                        <br />
                        @if(comment.Deleted is not null)
                        {
                            <span class="small font-italic">The comment posted on @comment.Created.ToString() by @comment.BlogUser.DisplayName was deleted by the Moderator...</span>
                        }
                        else if(comment.Moderated is not null)
                        {
                            <span class="small font-italic">The comment posted on @comment.Created.ToString() by @comment.BlogUser.DisplayName has been Moderated...</span>                      
                        }

                        <hr />

                         @*****************************************************************
                        SECTION 2B: Render main body                       
                        *****************************************************************@                      
                        @if(string.IsNullOrEmpty(comment.Body))
                        {
                            <span class="small font-italic">Comment not available...</span>
                        }
                        else if(comment.Moderated is not null)
                        {
                            @comment.ModeratedBody
                        }
                        else if(comment.Deleted is null)
                        {
                            @comment.Body
                        }


                        @****************************************************************
                            SECTION 3: CAN WE RENDER THE EDIT BUTTON           
                        *****************************************************************@
                        @if (comment.Moderated is null && comment.Deleted is null && comment.BlogUserId == userManager.GetUserId(User))
                        {
                            <hr>
                            <button data-toggle="modal" data-target="#editModal" class="btn-sm btn-dark float-right font-weight-bold">EDIT</button>
                        }
  
                        @****************************************************************
                        SECTION 4: CAN WE RENDER THE MODERATE AND DELETE BUTTONS              
                        *****************************************************************@
                        @if (User.IsInRole(BlogRole.Moderator.ToString()) && comment.Deleted is null)
                        {
                            <hr>
                            <div class="row">                          
                                <div class="col-2">
                                    <button  class="btn-sm btn-dark font-weight-bold btn-block" data-toggle="modal" data-target="#moderate">MODERATE</button>                                                   
                                </div>
                                    <div class="col-2">
                                    <form asp-action="Delete" asp-controller="Comments">
                                        @Html.Hidden("CommentId", comment.Id)
                                        @Html.Hidden("Slug", comment.Post.Slug)
                                        <button  class="btn-sm btn-dark font-weight-bold btn-block">DELETE</button>
                                    </form>
                                </div>
                            </div>                  
                        }
                                       
                    </div>

                </div>


                @*Modals*@
                <div class="modal" id="editModal">
                    <div class="modal-dialog">
                        <div class="modal-content">          
                            <div class="modal-header">
                                <h4 class="modal-title">Editing Comment...</h4>
                                   
                            </div>

                            <!-- Modal body -->
                            <div class="modal-body">
                                <form asp-action="Edit" asp-controller="Comments">
                                    @Html.Hidden("Id", comment.Id)
                                      
                                    <div class="form-group">
                                        <textarea name="Body" class="form-control" required>@comment.Body</textarea>
                                    </div>
                                       
                                    <button class="btn-sm btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                                </form>
                            </div>

                            <!-- Modal footer -->
                            <div class="modal-footer">
                                <button type="button" class="btn-sm btn-dark font-weight-bold" data-dismiss="modal">CLOSE</button>
                            </div>

                        </div>
                    </div>
                </div>
               
                <div class="modal" id="moderate">
                    <div class="modal-dialog">
                        <div class="modal-content">

                            <!-- Modal Header -->
                            <div class="modal-header">
                                <h4 class="modal-title">Moderating Comment...</h4>
                                        
                            </div>

                            <!-- Modal body -->
                            <div class="modal-body">
                                <form asp-action="Moderate" asp-controller="Comments">
                                    @Html.Hidden("Id", comment.Id)
                                    @Html.Hidden("Body", comment.Body)

                                    <div class="form-group">
                                        <label class="control-label">Original Comment</label>
                                        <textarea disabled class="form-control" style="resize:none">@comment.Body</textarea>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label">Moderated Comment</label>
                                        <textarea required name="ModeratedBody" class="form-control">@comment.ModeratedBody</textarea>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label">Reason For Moderation</label>
                                        <select class="form-control" asp-for="@comment.ModerationType" name="ModerationType" asp-items="Html.GetEnumSelectList<ModerationType>()"></select>
                                    </div>

                                     <div class="form-group">
                                         <div class="row">
                                             <div class="col">
                                                <button class="btn-sm btn-block btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>                                         
                                             </div>
                                             <div class="col">
                                                <button class="btn-sm btn-block btn-dark font-weight-bold" type="button" data-dismiss="modal">CLOSE</button>                                         
                                             </div>                                     
                                         </div>
                                     </div>

                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@* @model TheBlogProject.Models.Post

@using Microsoft.AspNetCore.Identity
@using TheBlogProject.Services
@using TheBlogProject.Enums

@inject IHtmlHelper<Post> _htmlHelper
@inject IImageService imageService
@inject UserManager<BlogUser> userManager

@{
    ViewData["Title"] = "Details";
}

<!-- Post Content-->
<article class="mb-4">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                @Html.Raw(@Model.Content)
            </div>
        </div>
    </div>
</article>

<hr />
<hr />

<article>

    <div class="row">
        <div class="col text-center font-weight-bold h3">
            Custom Post Tags
        </div>
    </div>
    <div class="row">
        <div class="col text-center">
            @foreach(var tag in Model.Tags)
            {
                <a class="btn btn-warning btn-sm btn-outline-dark" asp-action="TagIndex" asp-route-tag="@tag.Text.ToLower()">#@tag.Text</a>
            }
        </div>

    </div>


</article>


<hr />

<!-- ********** COMMENT POST ***********-->
<div>

    @if(User.Identity.IsAuthenticated)
    {
        <form asp-action="Create" asp-controller="Comments" method="post">
            @Html.Hidden("PostId", Model.Id)
            @Html.Hidden("Slug", Model.Slug)

            <div class="form-group">
                <label class="h2 custom-control-label font-weight-bold">Add Comment</label>
                <textarea name="body" class="form-control" rows="10"></textarea>
            </div>

            <button type="submit" class="btn btn-dark w-100 btn-sm">Submit</button>
        </form>
    }
    else
    {
        <a class="btn btn-sm btn-dark w-100" asp-area="Identity" asp-page="/Account/Login">
            Login to add comments
        </a>
    }
</div>

<hr />

<span id="commentSection" class="btn btn-sm btn-dark w-100">@Model.Comments.Count COMMENT(S)</span>

@{var counter = 0; }
@foreach (var comment in Model.Comments.OrderByDescending(c => c.Created))
{
    <div class="media media-border p-0 mb-2 bg-light">

        <img class="mr-3 mt-3 rounded-circle" style="width:60px;" src="@imageService.DecodeImage(comment.BlogUser.ImageData, comment.BlogUser.ContentType)"/>
        
        <div class="media-body">
            <h4>@comment.BlogUser.FullName</h4>
            <small>
                <i>
                    @if (comment.Deleted is not null)
                    {
                        <span class="small">
                            <span class="font-weight-bolder">DELETED</span> : <span class="text-danger font-italic">@comment.Deleted.ToString()</span>
                        </span>
                    }
                    else if (comment.Moderated is not null)
                    {
                        <span class="small">
                            <span class="font-weight-bolder">
                                Moderated <span class="text-danger font-italic">(@comment.ModerationType.ToString().ToLower()</span>
                            </span>
                            : @comment.Moderated?.ToString()
                        </span>
                    }
                    else if (comment.Updated is not null)
                    {
                        <span class="small">
                            <span class="font-weight-bolder">UPDATED</span> : <span class="text-danger font-italic">@comment.Updated.ToString()</span>
                        </span>
                    }
                    else
                    {
                        <span class="small font-italic">Posted : @comment.Created.ToString()</span>
                    }
                </i>
            </small>
            
            <p>@comment.Body</p>

            @if(comment.Moderated is null && comment.Deleted is null && comment.BlogUserId == userManager.GetUserId(User))
            {
                <hr>
                <button data-bs-toggle="modal" data-bs-target="#editModal" class="btn btn-sm btn-dark float-right font-weight-bold">Edit</button>
            }

        </div>
    </div>
    

    @* *************************************************
       SECTION 1: RENDER THE EDIT BUTTONS
       ************************************************* *@
@*     @if (comment.Moderated is null && comment.Deleted is null && comment.BlogUserId == userManager.GetUserId(User))
    {
        <hr>
        <button data-toggle="modal" data-target="@($"#editModal{counter}")" class="btn btn-sm btn-dark float-end font-weight-bold"></button>
    } *@

    @* *************************************************
       SECTION 2: RENDER THE MODERATE AND DELETE BUTTONS
       ************************************************* *@

   @*  @if (User.IsInRole(BlogRole.Moderator.ToString()) && comment.Deleted is null)
    {
        <hr>
        <div class="row">
            <div class="col-2">
                <button class="btn btn-sm btn-dark font-weight-bold w-100" data-toggle="modal" data-target="@($"#moderateModal{counter}")">MODERATE</button>
            </div>
            <div class="col-2">
                <form asp-action="Delete" asp-controller="Comments"> 
                    @Html.Hidden("Id", comment.Id)
                    @Html.Hidden("Slug", comment.Post.Slug)
                    <button class="btn btn-sm btn-dark font-weight-bold w-100">DELETE</button>
                </form>
            </div>
        </div>
    } *@

    <!-- User Modal -->
    @* <div class="modal" id="editModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">"Editing Comment..."</h4>
                    </div>

                    <!-- Modal Body -->
                    <div class="modal-body">
                        <form asp-action="Edit" asp-controller="Comments">
                            @Html.Hidden("Id", comment.Id)

                            <div class="form-group">
                                <textarea name="Body" class="form-control" required>@comment.Body</textarea>
                            </div>

                            <button class="btn btn-sm btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                        </form>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-sm btn-dark font-weight-bold" data-bs-dismiss="modal">CLOSE</button>
                    </div>

                </div>
            </div>

        </div> *@


    @* Modals *@
  @*   <div class="modal" id="@($"moderateModel{counter}")">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Moderating Comment...</h4>

                </div>

                <!-- Modal Body -->
                <div class="modal-body">
                    <form asp-action="Moderate" asp-controller="Comments">
                        @Html.Hidden("Id", comment.Id)
                        @Html.Hidden("Id", comment.Body)

                        <div class="form-group">
                            <label class="control-label">Original Comment</label>
                            <textarea disabaled class="form-control" style="resize:none">@comment.Body</textarea>
                        </div>

                        <div class="form-group">
                            <label class="control-label">Moderated Comment</label>
                            <textarea required name="ModeratedBody" class="form-control" style="resize:none">@comment.ModeratedBody</textarea>
                        </div>

                        <div class="form-group">
                            <label class="control-label">Reason for Moderating</label>
                            <select class="form-control" asp-for="@comment.ModerationType" name="ModerationType" asp-items="Html.GetEnumSelectList<ModerationType>()"></select>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                <div class="col">
                                    <button class="btn btn-sm w-100 btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                                </div>
                                <div class="col">
                                    <button class="btn btn-sm w-100 btn-dark border-success font-weight-bold" type="submit" data-dismiss="modal">CLOSE</button>
                                </div>
                            </div>
                        </div>

                    </form>
                </div>

            </div>
        </div>
    </div>

    counter++;
} *@