@using TheBlogProject.Models
@using TheBlogProject.Services
@using TheBlogProject.Enums
@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject IImageService _imageService
@inject UserManager<BlogUser> _userManager

@model IPagedList<Blog>

@{
    ViewData["Title"] = "Home Page";
}

<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">

            @foreach(var blog in Model)
            {
                <div>
                    <!-- Post preview-->
                    <div class="post-preview">
                        <div class="w-100 text-center">
                            <img class="img-fluid" style="height: 400px;" src="@_imageService.DecodeImage(blog.ImageData, blog.ContentType)" />
                        </div>
                        <a asp-controller="Posts" asp-action="BlogPostIndex" asp-route-id="@blog.Id">
                            <h2 class="post-title">
                                @blog.Name
                            </h2>
                            <h3 class="post-subtitle">
                                @blog.Description
                            </h3>
                        </a>
                        <p class="post-meta">
                            Authored by
                            <a href="#">@blog.BlogUser.FullName</a>
                            on @blog.Created.ToString()
                        </p>
                    </div>
                </div>

                <!-- Divider-->
                <hr class="mb-4" />
            }


            <!-- Add Paging controls here -->

            <div class="row">
                <div class="col h3">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                </div>
            </div>

            <div class="row">
                <div class="col">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }), new PagedListRenderOptions {LiElementClasses = new string[] { "page-item" }, PageClasses = new string[] { "page-link" }
                })
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {

<script>
    var swalMsg = '@TempData["SweetAlert"]'
        if (swalMsg != "") {
            Swal.fire({
                icon: 'success',
                title: swalMsg,
                timer: 2500
            })
        }

        $(document).ready(function () {
            $("p").tooltip();
        })

    </script>

}